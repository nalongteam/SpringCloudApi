<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.market.item.mapper.SpuDetailMapper">
  <resultMap id="BaseResultMap" type="com.market.item.model.SpuDetail">
    <id column="spu_id" jdbcType="BIGINT" property="spuId" />
    <result column="specifications" jdbcType="VARCHAR" property="specifications" />
    <result column="spec_template" jdbcType="VARCHAR" property="specTemplate" />
    <result column="packing_list" jdbcType="VARCHAR" property="packingList" />
    <result column="after_service" jdbcType="VARCHAR" property="afterService" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.market.item.model.SpuDetail">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Base_Column_List">
    spu_id, specifications, spec_template, packing_list, after_service
  </sql>
  <sql id="Blob_Column_List">
    description
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_spu_detail
    where spu_id = #{spuId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_spu_detail
    where spu_id = #{spuId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.market.item.model.SpuDetail">
    insert into tb_spu_detail (spu_id, specifications, spec_template, 
      packing_list, after_service, description
      )
    values (#{spuId,jdbcType=BIGINT}, #{specifications,jdbcType=VARCHAR}, #{specTemplate,jdbcType=VARCHAR}, 
      #{packingList,jdbcType=VARCHAR}, #{afterService,jdbcType=VARCHAR}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.market.item.model.SpuDetail">
    insert into tb_spu_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="spuId != null">
        spu_id,
      </if>
      <if test="specifications != null">
        specifications,
      </if>
      <if test="specTemplate != null">
        spec_template,
      </if>
      <if test="packingList != null">
        packing_list,
      </if>
      <if test="afterService != null">
        after_service,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="spuId != null">
        #{spuId,jdbcType=BIGINT},
      </if>
      <if test="specifications != null">
        #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="specTemplate != null">
        #{specTemplate,jdbcType=VARCHAR},
      </if>
      <if test="packingList != null">
        #{packingList,jdbcType=VARCHAR},
      </if>
      <if test="afterService != null">
        #{afterService,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.market.item.model.SpuDetail">
    update tb_spu_detail
    <set>
      <if test="specifications != null">
        specifications = #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="specTemplate != null">
        spec_template = #{specTemplate,jdbcType=VARCHAR},
      </if>
      <if test="packingList != null">
        packing_list = #{packingList,jdbcType=VARCHAR},
      </if>
      <if test="afterService != null">
        after_service = #{afterService,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where spu_id = #{spuId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.market.item.model.SpuDetail">
    update tb_spu_detail
    set specifications = #{specifications,jdbcType=VARCHAR},
      spec_template = #{specTemplate,jdbcType=VARCHAR},
      packing_list = #{packingList,jdbcType=VARCHAR},
      after_service = #{afterService,jdbcType=VARCHAR},
      description = #{description,jdbcType=LONGVARCHAR}
    where spu_id = #{spuId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.market.item.model.SpuDetail">
    update tb_spu_detail
    set specifications = #{specifications,jdbcType=VARCHAR},
      spec_template = #{specTemplate,jdbcType=VARCHAR},
      packing_list = #{packingList,jdbcType=VARCHAR},
      after_service = #{afterService,jdbcType=VARCHAR}
    where spu_id = #{spuId,jdbcType=BIGINT}
  </update>
</mapper>